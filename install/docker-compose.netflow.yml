version: '2.1'
services:

  #
  # This file can be used to include NetFlow collector and bot to your environment.
  #

  # To test it, NetFlow v5 traffic generator can be used:
  #  $ docker run --net=host --name nflow networkstatic/nflow-generator -t 127.0.0.1 -p 2055
  # (replace the port appropriately)

  netflowbot:
    image: grafolean/grafolean-netflow-bot
    container_name: grafolean-netflow-bot
    depends_on:
      db:
        condition: service_healthy
    environment:
      - BACKEND_URL=http://grafolean/api
      - BOT_TOKEN_FROM_FILE=/shared-secrets/tokens/netflow-bot.token
      - JOBS_REFRESH_INTERVAL=${JOBS_REFRESH_INTERVAL:-60}
      - DB_HOST=db
      - DB_DATABASE=${DB_NAME:-grafolean}
      - DB_USERNAME=${DB_USER:-admin}
      - DB_PASSWORD=${DB_PASS:-admin}
    restart: always
    volumes:
      - shared-secrets:/shared-secrets
    networks:
      - grafolean


  netflowcollector:
    # This process collects NetFlow data and writes it to a shared named pipe. The
    # reason is that there is a Docker bug which causes UDP packets to change the source
    # IP if processed within the Docker network. To avoid that, we have a collector
    # listening on host network interface, then transferring the data to a "writer"
    # process within the network, which writes it to a DB.
    image: grafolean/grafolean-netflow-bot
    container_name: grafolean-netflow-collector
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NAMED_PIPE_FILENAME=/shared-grafolean/netflow.pipe
      - NETFLOW_PORT=2055
    ports:
      - "${NETFLOW_PORT:-2055}:2055/udp"
    restart: always
    # NetFlow collector uses the same docker image as bot (grafolean/grafolean-netflow-bot),
    # but specifies a different entrypoint:
    entrypoint:
      - python
      - -m
      - netflowcollector
    volumes:
      - shared-grafolean:/shared-grafolean
    # this is the only NetFlow process that listens on the host network interface:
    network_mode: "host"


  netflowwriter:
    # Reads netflow data from named pipe and writes it to DB.
    image: grafolean/grafolean-netflow-bot
    container_name: grafolean-netflow-writer
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NAMED_PIPE_FILENAME=/shared-grafolean/netflow.pipe
      - DB_HOST=db
      - DB_DATABASE=${DB_NAME:-grafolean}
      - DB_USERNAME=${DB_USER:-admin}
      - DB_PASSWORD=${DB_PASS:-admin}
    restart: always
    # CAREFUL: NetFlow collector uses the same docker image as bot
    # (grafolean/grafolean-netflow-bot), but specifies a different entrypoint:
    entrypoint:
      - python
      - -m
      - netflowwriter
    volumes:
      - shared-grafolean:/shared-grafolean
    # To use py-spy:
    #   - $ docker exec -ti grafolean-netflow-writer bash
    #   - # pip install py-spy
    #   - # py-spy record -n -o /tmp/prof/out.svg --pid 1
    # But first, these 3 lines below must be enabled, to add a volume and capabilities: (careful not to add spaces!)
    #  - /tmp/prof/:/tmp/prof/
    #cap_add:
    #  - SYS_PTRACE
    networks:
      - grafolean


volumes:
  shared-grafolean:
