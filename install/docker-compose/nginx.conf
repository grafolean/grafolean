user www-data;
pid /run/nginx.pid;
worker_processes auto;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    access_log /dev/stdout;
    error_log /dev/stdout;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    index   index.html index.htm;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        root         /var/www/html;

        location /api/ {
            include uwsgi_params;
            uwsgi_pass unix:///tmp/uwsgi.socket;
        }

        # Handling MQTT websockets connection through nginx saves us a lot of trouble:
        # - easier CORS handling (there is no cross-origin - frontend and mqtt ws are on the same origin)
        # - easier CSP handling ('connect-src' can be 'self')
        # - adding TLS can be done by changing
        location /mqtt {
            # nginx doesn't allow env vars to be used (easily), so we substitute MQTT_HOSTNAME at start time:
            proxy_pass http://$MQTT_HOSTNAME:9883/mqtt;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 3600000000s; # there doesn't seem to be a way to set this to unlimited, so we'll settle for ~100 years
        }

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.

            # avoid clickjacking by not allowing our page to be embedded in (i)frame:
            add_header X-Frame-Options SAMEORIGIN;
            # always obey mime type:
            add_header X-Content-Type-Options nosniff;
            # best of all, Content-Security-Headers, along with reporting to our backend:
            #   (note that META tags in index.html might interfere with this - if you change anything, make sure you also change META tags appropriately)
            add_header Content-Security-Policy "report-uri /api/status/cspreport/; default-src 'none'; style-src 'self' 'unsafe-inline'; script-src 'self' 'unsafe-inline'; connect-src 'self'; font-src 'self'; img-src 'self'; worker-src 'self'; manifest-src 'self';";

            try_files $uri /index.html;
        }
    }
}
