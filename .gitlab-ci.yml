image: docker:stable

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2

stages:
  - test
  - deploy

before_script:
  - 'echo "export const VERSION_INFO = { ciCommitTag: ''$CI_COMMIT_TAG'' };" > ./frontend/src/VERSION.js'
  # automatically create frontend/src/CHANGELOG.json from GitLab tags:
  - apk add --no-cache curl jq
  - 'curl -H "Private-Token: $GITLAB_API_ACCESS_TOKEN" "https://gitlab.com/api/v4/projects/grafolean%2Fgrafolean/repository/tags" > /tmp/tags.json'
  - 'cat /tmp/tags.json | jq ''[.[] | select(.name | test("^v[0-9]+[.][0-9]+[.][0-9]+$")) | { version: .name, changelog: .release.description, created_at: .commit.created_at }]'' > frontend/src/CHANGELOG.json'

# frontend_lint:
#   stage: test
#   image: node:10-alpine
#   only:
#     changes:
#       - frontend/**/*
#   script:
#     - cd frontend
#     - yarn install
#     - yarn lint

deploy_to_docker_hub:
  stage: deploy
  when: manual
  only:
    # We only want master branch AND when tag looks like 'vX.Y.Z', however GitLab doesn't support conjunctive conditions yet:
    #   https://gitlab.com/gitlab-org/gitlab-ce/issues/27818
    # refs:
    #   - master  # Yeah, that doesn't work... The job for a commit with a tag and on a master branch is not being created.
    #
    # However we can mark tags 'v*.*.*' as protected, which also allows us to (somewhat) safely use Private-Token as protected
    # CI variable.
    variables:
      - $CI_COMMIT_TAG =~ /^v[0-9]+[.][0-9]+[.][0-9]+$/
  script:
    - apk add --no-cache git
    # check that we are deploying the latest version:
    - export LAST_KNOWN_VERSION=`git tag -l --sort=-version:refname "v*.*.*" | head -n 1 | tr -d '[:space:]'`
    - '[ "$LAST_KNOWN_VERSION" == "$CI_COMMIT_TAG" ] || (echo "Tag does not denote latest known version (which is $LAST_KNOWN_VERSION), aborting!" && exit 1)'
    - echo "Deploying..."
    - cp ./install/docker-compose/Dockerfile .
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" -t "$CI_REGISTRY_IMAGE:latest" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
    - docker push "$CI_REGISTRY_IMAGE:latest"
    - docker rmi grafolean/grafolean:$CI_COMMIT_TAG
    - docker rmi grafolean/grafolean:latest

deploy_to_demo.grafolean.com:
  image: node:10-alpine
  stage: deploy
  when: manual
  only:
    # only on (protected) version tags:
    variables:
      - $CI_COMMIT_TAG =~ /^v[0-9]+[.][0-9]+[.][0-9]+$/
  variables:
    REACT_APP_BACKEND_ROOT_URL: "https://xo0y8lq3jf.execute-api.eu-central-1.amazonaws.com/dev/api"
  script:
    # frontend:
    - cd frontend
    - yarn install
    - CI=true yarn build
    # until we find a better solution, manually search and replace https://storage.googleapis.com/workbox-cdn/releases/3.6.2/workbox-sw.js
    # with a local copy of the file: (to avoid using CDN)
    - sed -i -e 's#https://storage[.]googleapis[.]com/workbox-cdn/releases/[0-9.]*/workbox-sw.js#/workbox/workbox-sw.js#g' build/service-worker.js
    - apk add --update python python-dev py-pip
    - pip install awscli
    - aws s3 sync ./build s3://demo.grafolean.com/

  artifacts:
    name: "build-$CI_COMMIT_TAG"
    expire_in: 100 years
    paths:
      - frontend/build/


